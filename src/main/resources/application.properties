server.port = 8080

#页面默认前缀目录
spring.mvc.view.prefix=/WEB-INF/jsp/
#页面默认后缀目录
spring.mvc.view.suffix=.jsp


# 数据库驱动配置信息
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://192.168.222.43:3306/land?useUnicode=true&characterEncoding=utf-8
spring.datasource.username =  root
spring.datasource.password = nMOBuMyRKelZwQRRr1xoTXUBWr/8QhbWcAujyQZuC5a9L9x4KiSJE7vTCkSCO/4ACKvFDiXhLlSjyH3j7oZWwg==



# ======================= 连接池配置信息 =======================

#初始化大小(最小、最大)
spring.datasource.initialSize = 5
spring.datasource.minIdle = 5
spring.datasource.maxActive = 20

#获取连接等待超时的时间
spring.datasource.maxWait = 6000

#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis = 60000

#配置一个连接在连接池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis = 300000

spring.datasource.validateQuery = SELECT 1 FROM DUAL
spring.datasource.testWhileIdle = true
spring.datasource.testOnBorrow = false
spring.datasource.testOnReturn = false

#开启preparedStatement缓存，并且指定每个连接上的大小
spring.datasource.poolPreparedStatements = true
spring.datasource.maxPoolPreparedStatementPerConnectionSize = 20

#配置监控同届拦截的filters ： 如果不配置stat，监控界面的sql无法统计；wall用于防止SQL注入
spring.datasource.filters = stat,wall,config
druid.stat.config_decrypt=true
druid.stat.config_decrypt_publickey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJ+Y6fqCjTnRyMds7SBGLqnJCguu4a281o8SXqrGE42HwWJB4SiYnPD6KgrZW6/rf+VN7Mt6/kQdyy/a2bX44ZkCAwEAAQ==
druid.stat.mergeSql = true
druid.stat.slowSqlMillis = 5000


#memcache配置
memcache.servers=192.168.222.43:11211
memcache.failover=true
memcache.weights=5
memcache.initConn=20
memcache.minConn=10
memcache.maxConn=50
memcache.maintSleep=3000
memcache.nagle=false
memcache.socketTO=3000
memcache.aliveCheck=true